@import 'libs/vars';
@import 'libs/functions';
@import 'libs/mixins';
@import 'libs/skel';
@import 'font-awesome.min.css';
@import url('https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,300i,400,400i');

.intro-content {
	text-align: center;
}

.list {
	padding: 6px 1rem;
	td, th {
		border: 1px solid black;
	}
	th {
		padding: 0.75rem 0.75rem;
	}
	table {
		border-collapse: collapse;
	}
	h2 {
		text-align: center;
		margin-bottom: 0.2rem;
	}
}

.hidden {
	display: none !important;
}

.parallax {
	position: relative;
}

.intro-img {
	height: 100vh;
	display: flex;
	flex-direction: column;
	justify-content: center;
	text-align: center;
}

.intro-img-one {
	background-image: url("/images/intro1.jpg");
	z-index: 0;

	/* Create the parallax scrolling effect */
	background-attachment: fixed;
	background-position: center;
	background-repeat: no-repeat;
	background-size: cover;
}

.intro-img-two {
	background-image: url("/images/intro2.jpg");
	position: absolute;
	top: 0;
	width: 100vw;

	/* Create the parallax scrolling effect */
	background-attachment: fixed;
	background-position: center;
	background-repeat: no-repeat;
	background-size: cover;

	opacity: 0;
	transition: opacity 1.5s ease-in-out;
	z-index: 1;
}

.show-second {
	.intro-img-two {
		opacity: 1;
		transition: opacity 1.5s ease-in-out;
	}
}

.intro-text, .intro-rsvp {
	z-index: 2;
}


.intro-text {
	color: floralwhite;
	font-size: 50px;
	position: absolute;
	top: 50%;
	text-shadow: 1px 1px 2px #969696;
	width: 100%;
	text-align: center;
}

.intro-rsvp {
	position: absolute;
	bottom: 20px;
	width: 100%;
	text-align: center;
	.rsvp-button {
		cursor: pointer;
		padding: 10px 55px;
		border: 1px solid white;
		color: white;
		font-weight: bold;
		font-size: 16px;
	}
}

#rsvp-form {
	input, select {
		font-size: 22px;
	}
	.first-name {
		width: 70%;
		input {
			height: 75px
		}
		margin: 0 auto;
	}
	.meal-pref {
		width: 70%;
		select {
			height: 75px
		}
		margin: 38px auto;
	}
	.select-wrapper:before {
		height: 70px;
		line-height: 70px;
	}
	.rsvp-radio-container {
		width: 70%;
		margin: 40px auto 0;
		text-align: center;
		overflow: auto;
		.rsvp-radio {
			margin-bottom: 1px;
			display: inline-block;
			float: initial;
		}
	}
}

.submit-button {
	position: relative;
	width: 40%;
	height: 4rem;
	outline: none;
}

.submit-loader {
	vertical-align: middle;
	height: 75%;
}

.submit-success {
	vertical-align: middle;
	height: 75%;
}

.site-footer {
	padding: 1rem 0;
}

@media (max-width: 767px) {
	#rsvp-form {
		.first-name {
			width: 100%;
			input {
				font-size: 18px;
			}
		}
		.meal-pref {
			width: 100%;
			select {
				font-size: 18px;
			}
		}
		.rsvp-radio-container {
			width: 100%;
			.rsvp-radio {
				width: 49%;
			}
		}
	}
}

@include skel-breakpoints((
	xlarge: '(max-width: 1680px)',
	large: '(max-width: 1280px)',
	medium: '(max-width: 980px)',
	small: '(max-width: 736px)',
	xsmall: '(max-width: 480px)',
	xxsmall: '(max-width: 360px)'
));

@include skel-layout((
	reset: 'full',
	boxModel: 'border',
	grid: (gutters: 2rem)
));

@mixin color($p) {
	@include color-typography($p);
	@include color-box($p);
	@include color-button($p);
	@include color-form($p);
	@include color-icon($p);
	@include color-list($p);
	@include color-section($p);
	@include color-table($p);
	@include color-banner($p);
	@include color-spotlight($p);
	@include color-gallery($p);
	@include color-items($p);
	@include color-index($p);
}

@mixin phone($image-width) {
	@include vendor('flex-grow', '0');
	@include vendor('flex-shrink', '0');
	border-radius: 0;
	border: solid _size(border-width);

	img {
		@include vendor('object-fit', 'cover');
		@include vendor('object-position', 'center');
		display: block;
		width: 100%;
		height: 100%;
		border-radius: 0;
	}

	&:before {
		content: '';
		display: block;
		background-position: center;
		background-repeat: no-repeat;
		border: solid _size(border-width);
		border-bottom: 0;
	}

	&:after {
		content: '';
		display: block;
		background-position: center;
		background-repeat: no-repeat;
		border: solid _size(border-width);
		border-top: 0;
	}

	@include resize-phone($image-width, 1);
}

@mixin resize-phone($image-width, $image-factor) {
	$image-pad-top: 2.5rem;
	$image-pad-bottom: 3rem;
	$image-height: ($image-width * (1920 / 1080));

	width: ($image-width * $image-factor);
	height: (($image-width * $image-factor) * (1920 / 1080));
	margin-top: ($image-pad-top * $image-factor);
	margin-bottom: (_size(element-margin) + ($image-pad-bottom * $image-factor));

	&:before {
		height: ($image-pad-top * $image-factor);
		background-size: (64px * $image-factor) (32px * $image-factor);
		margin-top: (($image-pad-top * $image-factor) * -1);
		border-radius: (1rem * $image-factor) (1rem * $image-factor) 0 0;
	}

	&:after {
		height: ($image-pad-bottom * $image-factor);
		background-size: (64px * $image-factor) (32px * $image-factor);
		margin-bottom: (($image-pad-bottom * $image-factor) * -1);
		border-radius: 0 0 (1rem * $image-factor) (1rem * $image-factor);
	}
}

@mixin color-phone($p) {
	border-color: _palette($p, border);
	background-color: _palette($p, border);

	@if ($p != 'invert') {
		border-width: 0;
	} @else {
		border-width: _size(border-width);
	}

	&:before {
		background-image: svg-url('<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="64px" height="32px" viewBox="0 0 64 32" zoomAndPan="disable"><style>rect {fill: transparent; stroke: #{_palette($p, border)}; stroke-width: #{_size(border-width)}; }</style><rect rx="4" ry="4" x="11" y="12" width="42" height="8" vector-effect="non-scaling-stroke" /></svg>');
		border-color: _palette($p, border);

		@if ($p == 'invert') {
			width: calc(100% + #{_size(border-width) * 2});
			margin-left: (_size(border-width) * -1);
		} @else {
			width: 100%;
		}
	}

	&:after {
		background-image: svg-url('<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="64px" height="32px" viewBox="0 0 64 32" zoomAndPan="disable"><style>circle {fill: transparent; stroke: #{_palette($p, border)}; stroke-width: #{_size(border-width)}; }</style><circle cx="32" cy="16" r="14" vector-effect="non-scaling-stroke" /></svg>');
		border-color: _palette($p, border);

		@if ($p == 'invert') {
			width: calc(100% + #{_size(border-width) * 2});
			margin-left: (_size(border-width) * -1);
		} @else {
			width: 100%;
		}
	}
}

@mixin color-phone-variant($v, $p) {
	@if ($v == 'android') {
		&:after {
			background-image: svg-url('<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="64px" height="32px" viewBox="0 0 64 32" zoomAndPan="disable"><style>rect {fill: transparent; stroke: #{_palette($p, border)}; stroke-width: #{_size(border-width)}; }</style><rect rx="4" ry="4" x="6" y="4" width="52" height="24" vector-effect="non-scaling-stroke" /></svg>');
		}
	} @else if ($p == 'iphone') {
		// ...
	}
}

// Base.

@import 'base/page';
@import 'base/typography';

// Component.

@import 'components/box';
@import 'components/button';
@import 'components/form';
@import 'components/icon';
@import 'components/image';
@import 'components/list';
@import 'components/section';
@import 'components/table';
@import 'components/banner';
@import 'components/spotlight';
@import 'components/gallery';
@import 'components/wrapper';
@import 'components/items';
@import 'components/index';
@import 'components/signin';

// Layout.

@import 'layout/wrapper';
